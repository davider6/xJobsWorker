{"version":3,"sources":["./src/app/pages/edit-worker/edit-worker.page.html","./src/app/pages/edit-worker/edit-worker.module.ts","./src/app/pages/edit-worker/edit-worker.page.scss","./src/app/pages/edit-worker/edit-worker.page.ts"],"names":[],"mappings":"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","file":"pages-edit-worker-edit-worker-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar color=\\\"dark\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button (click)=\\\"returnHome()\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Actualización de Datos</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n    <div *ngIf=\\\"isLoaded\\\">\\n        <ion-list class=\\\"ion-no-margin ion-no-padding\\\" class=\\\"animate__animated animate__fadeIn\\\">\\n            <ion-item class=\\\"ion-text-center\\\">\\n                <span class=\\\"primary_title\\\">\\n                    Datos Generales\\n                </span>\\n            </ion-item>\\n            <ion-item>\\n                <ion-input [(ngModel)]=\\\"workerObje.fullName\\\" name=\\\"fullName\\\" type=\\\"latin-name\\\" inputmode=\\\"latin-name\\\" placeholder=\\\"Nombre Completo\\\" maxlength=\\\"60\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-input [(ngModel)]=\\\"workerObje.email\\\" name=\\\"email\\\" type=\\\"email\\\" inputmode=\\\"email\\\" placeholder=\\\"Correo Electrónico\\\" maxlength=\\\"150\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>                \\n                <ion-input [(ngModel)]=\\\"workerObje.telephoneNumber\\\" name=\\\"workerObje.telephoneNumber\\\" type=\\\"text\\\" inputmode=\\\"tel\\\" placeholder=\\\"Número de Teléfono\\\" maxlength=\\\"50\\\"></ion-input>\\n                <ion-input [(ngModel)]=\\\"workerObje.zipCode\\\" name=\\\"zipCode\\\" type=\\\"text\\\" inputmode=\\\"tel\\\" placeholder=\\\"Zip Code\\\" maxlength=\\\"10\\\"></ion-input>\\n            </ion-item>\\n            <br>\\n            <ion-radio-group name=\\\"levelExperience\\\" [(ngModel)]=\\\"workerObje.englishLevel\\\">\\n                <ion-list-header>\\n                    <ion-label>Nivel de Experiencia:</ion-label>\\n                </ion-list-header>\\n                <ion-item>\\n                    <ion-label>Media (0 a 5 años)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"N\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Avanzada (5 a 10 años)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"B\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Experto (10 años en adelante)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"A\\\"></ion-radio>\\n                </ion-item>\\n            </ion-radio-group>\\n            <br>\\n            <div class=\\\"ion-padding\\\">\\n                <ion-button expand=\\\"block \\\" (click)=\\\"register()\\\" class=\\\"primary-btn\\\">Actualizar Datos Generales</ion-button>\\n            </div>\\n        </ion-list>\\n\\n        <ion-list>\\n            <ion-item class=\\\"ion-text-center\\\">\\n                <span class=\\\"primary_title\\\">\\n                    Ocupaciones Asignadas\\n                </span>\\n            </ion-item>\\n            <ion-item *ngFor=\\\"let wo of workerOccupations\\\">\\n                <ion-avatar slot=\\\"start\\\">\\n                    <img [src]=\\\"wo.categoryImageOccupation\\\">\\n                </ion-avatar>\\n                <ion-label>\\n                    <h2>{{wo.nameOccupation}}</h2>\\n                    <h3>Rate: ${{wo.hourlyRate}}</h3>\\n                </ion-label>\\n                <ion-button class=\\\"secondary-btn\\\" fill=\\\"outline\\\" slot=\\\"end\\\" (click)=\\\"deleteOccupation(wo)\\\">Eliminar</ion-button>\\n            </ion-item>\\n        </ion-list>\\n\\n        <ion-list>\\n            <ion-item color=\\\"primary\\\">\\n                <ion-label >\\n                    Asignar Nuevas Ocupaciones\\n                </ion-label>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Categoria</ion-label>\\n                <ion-select interface=\\\"action-sheet\\\" multiple=\\\"false\\\" (ionChange)=\\\"categoryChange()\\\" [(ngModel)]=\\\"selCategoryId\\\">\\n                    <ion-select-option *ngFor=\\\"let category of categories\\\" value=\\\"{{ category.id }}\\\">{{ category.name }}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Sub Categoria</ion-label>\\n                <ion-select interface=\\\"action-sheet\\\" multiple=\\\"false\\\" [(ngModel)]=\\\"selOccupationsId\\\">\\n                    <ion-select-option *ngFor=\\\"let catOc of categoryOccupations\\\" value=\\\"{{ catOc.occupationId }}\\\">{{ catOc.occName }}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Tarifa por Hora</ion-label>\\n                <ion-input class=\\\"ion-text-left\\\" [(ngModel)]=\\\"selRate\\\" name=\\\"rate\\\" placeholder=\\\"Tarifa por Hora\\\" inputmode=\\\"number\\\" type=\\\"number\\\"></ion-input>\\n                <ion-button class=\\\"primary-btn\\\" slot=\\\"end\\\" (click)=\\\"saveOccupation()\\\">Agregar</ion-button>\\n            </ion-item>\\n        </ion-list>\\n    </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditWorkerPage } from './edit-worker.page';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditWorkerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EditWorkerPage]\n})\nexport class EditWorkerPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VkaXQtd29ya2VyL2VkaXQtd29ya2VyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\nimport { Worker } from '../../models/worker';\nimport { ApiService } from '../../services/api.service';\nimport { id } from '@swimlane/ngx-datatable';\nimport { WorkerOccupationDTO } from '../../models/dto/WorkerOcuppationDTO';\nimport { Categories } from '../../models/bo/Categories';\nimport { CategoryOccupationDTO } from '../../models/dto/CategoryOccupationDTO';\nimport { RequestFields } from '../../models/bo/request-fields';\n\n@Component({\n  selector: 'app-edit-worker',\n  templateUrl: './edit-worker.page.html',\n  styleUrls: ['./edit-worker.page.scss'],\n})\nexport class EditWorkerPage implements OnInit {\n  workerOccupations: WorkerOccupationDTO[];\n  workerObje: Worker;\n  token: string;\n  isLoaded = false;\n  categories: Categories[];\n  categoryOccupations: CategoryOccupationDTO[] = [];\n  selCategoryId: string;\n  selOccupationsId: string;\n  selRate: number;\n  constructor( private alertController: AlertController,\n               private router: Router,\n               private ionicStorage: Storage,\n               private api: ApiService ) {\n                this.clean();\n                if (this.router.getCurrentNavigation() && this.router.getCurrentNavigation().extras\n                      && this.router.getCurrentNavigation().extras.state) {\n                    this.token = this.router.getCurrentNavigation().extras.state.token;\n                    this.workerObje = this.router.getCurrentNavigation().extras.state.worker;\n                    if (this.workerObje && this.workerObje.id) {\n                      this.api.getWorkerOcuppationsByWorkerId( this.workerObje.id, this.token )\n                      .subscribe( (resp: WorkerOccupationDTO[]) => {\n                          this.workerOccupations = resp;\n                          this.api\n                              .getItemsByMethodCache('categories', null, this.token)\n                              .subscribe(\n                                (respCat: Categories[]) => {\n                                  this.categories = respCat;\n                                  this.categoryOccupations = [];\n                                  this.isLoaded = true;\n                                },\n                                (error2) => {\n                                  console.error(JSON.stringify(error2));\n                                }\n                              );\n                      });\n                    } else {\n                      this.router.navigate(['/home']);\n                    }\n                  } else {\n                    this.router.navigate(['/home']);\n                  }\n  }\n\n  ngOnInit() {\n  }\n\n  register() {\n    if ( !this.workerObje.fullName || this.workerObje.fullName == '' ){\n      this.presentAlert('No ha ingresado su nombre.', false);\n      return;\n    }else if ( !this.workerObje.telephoneNumber || this.workerObje.telephoneNumber == '' ){\n      this.presentAlert('No ha ingresado el número de teléfono.', false);\n      return;\n    }else if ( !this.workerObje.email || this.workerObje.email == '' ){\n      this.presentAlert('No ha ingresado un email válido.', false);\n      return;\n    }else if ( !this.workerObje.zipCode || this.workerObje.zipCode == '' ){\n      this.presentAlert('No ha ingresado un zip code válido.', false);\n      return;\n    }else if ( this.workerObje.englishLevel === null || this.workerObje.englishLevel === '' ){\n      this.presentAlert('No ha seleccionado el nivel de inglés.', false);\n      return;\n    }else{\n      this.api.updateEntity('workers', this.workerObje.id, this.workerObje, this.token).subscribe(\n        respv2 => {\n          this.ionicStorage.set(\"workerObject\", JSON.stringify(this.workerObje));\n          this.presentAlert('Datos actualizados con exito.', true);\n        }, error2 => {\n          this.presentAlert('Ocurrio un error al actualizar datos.', false);\n          console.error(JSON.stringify(error2));\n        }\n      );\n    }\n  }\n\n  saveOccupation() {\n    if (!this.selCategoryId || this.selCategoryId == '') {\n      this.presentAlert('Debe seleccionar categoria.', false);\n      return;\n    } else if (!this.selOccupationsId || this.selOccupationsId == '') {\n      this.presentAlert('Debe seleccionar sub categoria.', false);\n      return;\n    }  else if (!this.selRate || this.selRate < 1) {\n      this.presentAlert('Debe ingresar tarifa valida.', false);\n      return;\n    }\n    let found = false;\n    if (this.workerOccupations && this.workerOccupations.length > 0){\n        for (const currentOc of this.workerOccupations ){\n          if (currentOc.occupationId == Number(this.selOccupationsId)) {\n            found = true;\n          }\n        }\n    }\n    if (found) {\n      this.presentAlert('Sub categoria ya asignada.', false);\n      return;\n    }\n    let bodyParam = {\n      \"hourlyRate\": this.selRate,\n      \"id\": {\n        \"occupationId\": this.selOccupationsId,\n        \"workerId\": this.workerObje.id\n      },\n      \"occupationId\": this.selOccupationsId,\n      \"rate\": 5,\n      \"status\": true,\n      \"workerId\": this.workerObje.id\n    };\n\n    this.api.postEventWithToken(\n      bodyParam,\n      `backend-services/workerOcuppations`,\n      this.token\n    ).subscribe( respSave => {\n      this.clean();\n      this.presentAlert('Se ha asociado la ocupacion.', false);\n      this.api.getWorkerOcuppationsByWorkerId( this.workerObje.id, this.token )\n                      .subscribe( (resp: WorkerOccupationDTO[]) => {\n                        this.workerOccupations = resp;\n      });\n    }, (err) => {\n      console.log('error en alta de ocupaciones', err);\n    });\n  }\n\n  deleteOccupation(wo: WorkerOccupationDTO) {\n    this.api.changeWorkerOccupationStatus(wo.workerId, wo.occupationId, false, wo.hourlyRate, this.token).subscribe( (respUpd: any) => {\n        this.presentAlert('Ocupacion eliminada.', false);\n        this.api.getWorkerOcuppationsByWorkerId( this.workerObje.id, this.token )\n            .subscribe( (resp: WorkerOccupationDTO[]) => {\n                this.workerOccupations = resp;\n        });\n    }, error2 => {\n      this.presentAlert('Ocurrio un error al eliminar ocupacion.', false);\n      console.error(JSON.stringify(error2));\n    });\n  }\n\n  categoryChange() {\n    this.loadOccupations(this.selCategoryId);\n  }\n\n  loadOccupations(categoryId: string) {\n    this.selOccupationsId = null;\n    this.categoryOccupations = [];\n    const reqField: RequestFields[] = [\n      { fieldName: 'categoryId', fieldValue: categoryId },\n    ];\n\n    this.api\n      .getItemsByMethodCache(\n        'categoryOccupationsByCategoryId',\n        reqField,\n        this.token\n      ).subscribe((data: CategoryOccupationDTO[]) => {\n        this.categoryOccupations = data;\n      });\n  }\n\n  clean() {\n    this.categoryOccupations = [];\n    this.selCategoryId = null;\n    this.selOccupationsId = null;\n    this.selRate = null;\n  }\n\n  returnHome(){\n    this.clean();\n    this.router.navigate(['/home']);\n  }\n\n  async presentAlert( messageStr: any , back: boolean) {\n    const alert = await this.alertController.create({\n      header: 'Actualizacion de Datos',\n      subHeader: 'Jobs Exchange',\n      message: messageStr,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    if (back) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}