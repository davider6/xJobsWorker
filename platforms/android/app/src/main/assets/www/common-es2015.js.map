{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-274abd17.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-3f0b0c04.js","./src/app/pages/sub-categories/sub-categories.page.html","./src/app/pages/sub-categories/sub-categories.page.scss","./src/app/pages/sub-categories/sub-categories.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AClD1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAe,iYAAkU,gBAAgB,qtBAAqtB,sBAAsB,oEAAoE,6BAA6B,2VAA2V,E;;;;;;;;;;;;ACAxgD;AAAe,iFAAkB,kBAAkB,GAAG,6CAA6C,2iBAA2iB,E;;;;;;;;;;;;;;;;;;;;;ACArlB;AACR;AACS;AAEA;AACjB;AAOzC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAa5B,YAAoB,SAA0B,EACzB,UAAsB,EACvB,WAAwB,EACvB,YAAqB;QAHtB,cAAS,GAAT,SAAS,CAAiB;QACzB,eAAU,GAAV,UAAU,CAAY;QACvB,gBAAW,GAAX,WAAW,CAAa;QACvB,iBAAY,GAAZ,YAAY,CAAS;QAR1C,qBAAgB,GAAW,yEAAyE,CAAC;QAUvF,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAE,CAAC,GAAG,EAAE,EAAE;YACtC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACjB,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,CAAC;YACzC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IAEJ,CAAC;IAEd,QAAQ;IACR,CAAC;IAED,iBAAiB;QAEf,qCAAqC;QACrC,IAAK,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE;YACzD,IAAI,CAAC,UAAU,CAAC,QAAQ,CACtB,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,KAAK,CAAE;iBACb,SAAS,CAAE,CAAC,IAA6B,EAAE,EAAE;gBAC1C,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;YAC/D,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;SAEJ;IACH,CAAC;IAED,OAAO;QAEL,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,MAAM,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAE5F,+CAA+C;QAC/C,qDAAqD;QACrD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACrB,WAAW,EAAE,IAAI;YACjB,YAAY,EAAE,IAAI,CAAC,UAAU;YAC7B,aAAa,EAAE,QAAQ,CAAC,MAAM;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAE,YAAoB;QAEpC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACrE,IAAG,GAAG,CAAC,YAAY,KAAK,YAAY,EAAE;gBACpC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;aACxI;QACL,CAAC,CAAC,CAAC;QAEH,mGAAmG;QACnG,gCAAgC;IAClC,CAAC;CAEF;;YAzDgC,8DAAe;YACb,uEAAU;YACV,kEAAW;YACT,sDAAO;;AAbjC;IAAR,2DAAK,EAAE;gDAAe;AACd;IAAR,2DAAK,EAAE;qDAAoB;AACnB;IAAR,2DAAK,EAAE;uDAAsB;AACrB;IAAR,2DAAK,EAAE;wDAAuB;AANpB,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,kPAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAsE7B;AAtE6B","file":"common-es2015.js","sourcesContent":["import { w as writeTask } from './index-29df6f59.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let touchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== touchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        touchedButton = button;\n        const buttonToModify = touchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!touchedButton) {\n            return;\n        }\n        const buttonToModify = touchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        if (dispatchClick) {\n            touchedButton.click();\n        }\n        touchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-header>\\n    <ion-toolbar color=\\\"dark\\\">\\n        <!-- <ion-buttons slot=\\\"start\\\">\\n            <ion-button (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"close-circle\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons> -->\\n        <ion-title class=\\\"ion-text-center\\\">{{ categoryName }}</ion-title>\\n\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button (click)=\\\"dismiss()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"category-image\\\">\\n        <img [src]=\\\"categoryImage\\\">\\n    </div>\\n    <ion-list>\\n        <ion-item *ngFor=\\\"let occupation of authService.categories[index].occupations\\\" (click)=\\\"selectOccupation(occupation.occupationId)\\\">\\n            <ion-avatar slot=\\\"start\\\">\\n                <img [src]=\\\"occupation.occImage\\\">\\n            </ion-avatar>\\n            <ion-label>\\n                <h2>\\n                    {{ occupation.occName }}\\n                </h2>\\n                <p>\\n                    {{ occupation.occDescription }}\\n                </p>\\n            </ion-label>\\n            <ion-icon slot=\\\"end\\\" name=\\\"ellipse-outline\\\" *ngIf=\\\"!occupation.selected\\\" color=\\\"primary\\\"></ion-icon>\\n            <ion-icon slot=\\\"end\\\" name=\\\"checkmark-circle\\\" *ngIf=\\\"occupation.selected\\\" color=\\\"primary\\\"></ion-icon>\\n        </ion-item>\\n    </ion-list>\\n</ion-content>\";","export default \".category-image {\\n  height: 120px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYWx2YXJhZG8vZGVzYXJyb2xsby9lbmlhY2d0L2lvbmljL3hKb2JzL3hKb2JzV29ya2VyL3NyYy9hcHAvcGFnZXMvc3ViLWNhdGVnb3JpZXMvc3ViLWNhdGVnb3JpZXMucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9zdWItY2F0ZWdvcmllcy9zdWItY2F0ZWdvcmllcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9zdWItY2F0ZWdvcmllcy9zdWItY2F0ZWdvcmllcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2F0ZWdvcnktaW1hZ2Uge1xuICAgIGhlaWdodDogMTIwcHg7XG59IiwiLmNhdGVnb3J5LWltYWdlIHtcbiAgaGVpZ2h0OiAxMjBweDtcbn0iXX0= */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { ApiService } from 'src/app/services/api.service';\nimport { OccupationsByCategory } from 'src/app/models/occ-category';\nimport { AuthService } from '../../services/auth.service';\nimport { Storage } from \"@ionic/storage\";\n\n@Component({\n  selector: 'app-sub-categories',\n  templateUrl: './sub-categories.page.html',\n  styleUrls: ['./sub-categories.page.scss'],\n})\nexport class SubCategoriesPage implements OnInit {\n\n  // Data passed in by componentProps\n  @Input() index: number;\n  @Input() categoryId: number;\n  @Input() categoryName: string;\n  @Input() categoryImage: string;\n\n  subCategoriesUrl: string = 'categoryCategoryOccupations/categoryOccupationsByCategoryId?categoryId=';\n\n  occupations: OccupationsByCategory;\n  token: string;\n\n  constructor( public modalCtrl: ModalController,\n               private apiService: ApiService,\n               public authService: AuthService,\n               private ionicStorage: Storage ) { \n\n                ionicStorage.get('token').then( (val) => {\n                  this.token = val;\n                  this.subCategoriesUrl += this.categoryId;\n                  this.loadSubcategories();\n                });\n\n               }\n\n  ngOnInit() {    \n  }\n\n  loadSubcategories(){\n\n    //La primera vez se debe cargar desde\n    if ( !this.authService.categories[this.index].occupations ){\n      this.apiService.getEvent( \n        this.subCategoriesUrl,\n        this.token )\n      .subscribe( (resp: OccupationsByCategory[]) => {\n          this.authService.categories[this.index].occupations = resp;\n      }, err => {\n        console.log('error cargando subcategorias', err);\n      });\n\n    }\n  }\n\n  dismiss() {\n\n    let selected = this.authService.categories[this.index].occupations.filter( x => x.selected);\n\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      'dismissed': true,\n      'categoryId': this.categoryId,\n      'occSelected': selected.length\n    });\n  }\n\n  selectOccupation( occupationId: number ){\n    \n    this.authService.categories[this.index].occupations.forEach((occ, idx) => {\n        if(occ.occupationId === occupationId) {\n          this.authService.categories[this.index].occupations[idx].selected = !this.authService.categories[this.index].occupations[idx].selected;\n        }\n    });\n    \n    // let occ = this.authService.occupations.find( record => record['occupationId'] === occupationId);\n    // occ.selected = !occ.selected;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}