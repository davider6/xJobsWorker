{"version":3,"sources":["webpack:///src/app/pages/edit-worker/edit-worker.page.html","webpack:///src/app/pages/edit-worker/edit-worker.module.ts","webpack:///src/app/pages/edit-worker/edit-worker.page.scss","webpack:///src/app/pages/edit-worker/edit-worker.page.ts"],"names":["routes","path","component","EditWorkerPageModule","imports","forChild","declarations","EditWorkerPage","alertController","router","ionicStorage","api","isLoaded","categoryOccupations","clean","getCurrentNavigation","extras","state","token","workerObje","worker","id","getWorkerOcuppationsByWorkerId","subscribe","resp","workerOccupations","getItemsByMethodCache","respCat","categories","error2","console","error","JSON","stringify","navigate","fullName","presentAlert","telephoneNumber","email","zipCode","englishLevel","updateEntity","respv2","set","selCategoryId","selOccupationsId","selRate","found","length","currentOc","occupationId","Number","bodyParam","postEventWithToken","respSave","err","log","wo","changeWorkerOccupationStatus","workerId","hourlyRate","respUpd","loadOccupations","categoryId","reqField","fieldName","fieldValue","data","messageStr","back","create","header","subHeader","message","buttons","alert","present","selector","template"],"mappings":"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","file":"pages-edit-worker-edit-worker-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar color=\\\"dark\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button (click)=\\\"returnHome()\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Actualización de Datos</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n    <div *ngIf=\\\"isLoaded\\\">\\n        <ion-list class=\\\"ion-no-margin ion-no-padding\\\" class=\\\"animate__animated animate__fadeIn\\\">\\n            <ion-item class=\\\"ion-text-center\\\">\\n                <span class=\\\"primary_title\\\">\\n                    Datos Generales\\n                </span>\\n            </ion-item>\\n            <ion-item>\\n                <ion-input [(ngModel)]=\\\"workerObje.fullName\\\" name=\\\"fullName\\\" type=\\\"latin-name\\\" inputmode=\\\"latin-name\\\" placeholder=\\\"Nombre Completo\\\" maxlength=\\\"60\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-input [(ngModel)]=\\\"workerObje.email\\\" name=\\\"email\\\" type=\\\"email\\\" inputmode=\\\"email\\\" placeholder=\\\"Correo Electrónico\\\" maxlength=\\\"150\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>                \\n                <ion-input [(ngModel)]=\\\"workerObje.telephoneNumber\\\" name=\\\"workerObje.telephoneNumber\\\" type=\\\"text\\\" inputmode=\\\"tel\\\" placeholder=\\\"Número de Teléfono\\\" maxlength=\\\"50\\\"></ion-input>\\n                <ion-input [(ngModel)]=\\\"workerObje.zipCode\\\" name=\\\"zipCode\\\" type=\\\"text\\\" inputmode=\\\"tel\\\" placeholder=\\\"Zip Code\\\" maxlength=\\\"10\\\"></ion-input>\\n            </ion-item>\\n            <br>\\n            <ion-radio-group name=\\\"levelExperience\\\" [(ngModel)]=\\\"workerObje.englishLevel\\\">\\n                <ion-list-header>\\n                    <ion-label>Nivel de Experiencia:</ion-label>\\n                </ion-list-header>\\n                <ion-item>\\n                    <ion-label>Media (0 a 5 años)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"N\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Avanzada (5 a 10 años)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"B\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Experto (10 años en adelante)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"A\\\"></ion-radio>\\n                </ion-item>\\n            </ion-radio-group>\\n            <br>\\n            <div class=\\\"ion-padding\\\">\\n                <ion-button expand=\\\"block \\\" (click)=\\\"register()\\\" class=\\\"primary-btn\\\">Actualizar Datos Generales</ion-button>\\n            </div>\\n        </ion-list>\\n\\n        <ion-list>\\n            <ion-item class=\\\"ion-text-center\\\">\\n                <span class=\\\"primary_title\\\">\\n                    Ocupaciones Asignadas\\n                </span>\\n            </ion-item>\\n            <ion-item *ngFor=\\\"let wo of workerOccupations\\\">\\n                <ion-avatar slot=\\\"start\\\">\\n                    <img [src]=\\\"wo.categoryImageOccupation\\\">\\n                </ion-avatar>\\n                <ion-label>\\n                    <h2>{{wo.nameOccupation}}</h2>\\n                    <h3>Rate: ${{wo.hourlyRate}}</h3>\\n                </ion-label>\\n                <ion-button class=\\\"secondary-btn\\\" fill=\\\"outline\\\" slot=\\\"end\\\" (click)=\\\"deleteOccupation(wo)\\\">Eliminar</ion-button>\\n            </ion-item>\\n        </ion-list>\\n\\n        <ion-list>\\n            <ion-item color=\\\"primary\\\">\\n                <ion-label >\\n                    Asignar Nuevas Ocupaciones\\n                </ion-label>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Categoria</ion-label>\\n                <ion-select interface=\\\"action-sheet\\\" multiple=\\\"false\\\" (ionChange)=\\\"categoryChange()\\\" [(ngModel)]=\\\"selCategoryId\\\">\\n                    <ion-select-option *ngFor=\\\"let category of categories\\\" value=\\\"{{ category.id }}\\\">{{ category.name }}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Sub Categoria</ion-label>\\n                <ion-select interface=\\\"action-sheet\\\" multiple=\\\"false\\\" [(ngModel)]=\\\"selOccupationsId\\\">\\n                    <ion-select-option *ngFor=\\\"let catOc of categoryOccupations\\\" value=\\\"{{ catOc.occupationId }}\\\">{{ catOc.occName }}</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Tarifa por Hora</ion-label>\\n                <ion-input class=\\\"ion-text-left\\\" [(ngModel)]=\\\"selRate\\\" name=\\\"rate\\\" placeholder=\\\"Tarifa por Hora\\\" inputmode=\\\"number\\\" type=\\\"number\\\"></ion-input>\\n                <ion-button class=\\\"primary-btn\\\" slot=\\\"end\\\" (click)=\\\"saveOccupation()\\\">Agregar</ion-button>\\n            </ion-item>\\n        </ion-list>\\n    </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditWorkerPage } from './edit-worker.page';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditWorkerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EditWorkerPage]\n})\nexport class EditWorkerPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VkaXQtd29ya2VyL2VkaXQtd29ya2VyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\nimport { Worker } from '../../models/worker';\nimport { ApiService } from '../../services/api.service';\nimport { id } from '@swimlane/ngx-datatable';\nimport { WorkerOccupationDTO } from '../../models/dto/WorkerOcuppationDTO';\nimport { Categories } from '../../models/bo/Categories';\nimport { CategoryOccupationDTO } from '../../models/dto/CategoryOccupationDTO';\nimport { RequestFields } from '../../models/bo/request-fields';\n\n@Component({\n  selector: 'app-edit-worker',\n  templateUrl: './edit-worker.page.html',\n  styleUrls: ['./edit-worker.page.scss'],\n})\nexport class EditWorkerPage implements OnInit {\n  workerOccupations: WorkerOccupationDTO[];\n  workerObje: Worker;\n  token: string;\n  isLoaded = false;\n  categories: Categories[];\n  categoryOccupations: CategoryOccupationDTO[] = [];\n  selCategoryId: string;\n  selOccupationsId: string;\n  selRate: number;\n  constructor( private alertController: AlertController,\n               private router: Router,\n               private ionicStorage: Storage,\n               private api: ApiService ) {\n                this.clean();\n                if (this.router.getCurrentNavigation() && this.router.getCurrentNavigation().extras\n                      && this.router.getCurrentNavigation().extras.state) {\n                    this.token = this.router.getCurrentNavigation().extras.state.token;\n                    this.workerObje = this.router.getCurrentNavigation().extras.state.worker;\n                    if (this.workerObje && this.workerObje.id) {\n                      this.api.getWorkerOcuppationsByWorkerId( this.workerObje.id, this.token )\n                      .subscribe( (resp: WorkerOccupationDTO[]) => {\n                          this.workerOccupations = resp;\n                          this.api\n                              .getItemsByMethodCache('categories', null, this.token)\n                              .subscribe(\n                                (respCat: Categories[]) => {\n                                  this.categories = respCat;\n                                  this.categoryOccupations = [];\n                                  this.isLoaded = true;\n                                },\n                                (error2) => {\n                                  console.error(JSON.stringify(error2));\n                                }\n                              );\n                      });\n                    } else {\n                      this.router.navigate(['/home']);\n                    }\n                  } else {\n                    this.router.navigate(['/home']);\n                  }\n  }\n\n  ngOnInit() {\n  }\n\n  register() {\n    if ( !this.workerObje.fullName || this.workerObje.fullName == '' ){\n      this.presentAlert('No ha ingresado su nombre.', false);\n      return;\n    }else if ( !this.workerObje.telephoneNumber || this.workerObje.telephoneNumber == '' ){\n      this.presentAlert('No ha ingresado el número de teléfono.', false);\n      return;\n    }else if ( !this.workerObje.email || this.workerObje.email == '' ){\n      this.presentAlert('No ha ingresado un email válido.', false);\n      return;\n    }else if ( !this.workerObje.zipCode || this.workerObje.zipCode == '' ){\n      this.presentAlert('No ha ingresado un zip code válido.', false);\n      return;\n    }else if ( this.workerObje.englishLevel === null || this.workerObje.englishLevel === '' ){\n      this.presentAlert('No ha seleccionado el nivel de inglés.', false);\n      return;\n    }else{\n      this.api.updateEntity('workers', this.workerObje.id, this.workerObje, this.token).subscribe(\n        respv2 => {\n          this.ionicStorage.set(\"workerObject\", JSON.stringify(this.workerObje));\n          this.presentAlert('Datos actualizados con exito.', true);\n        }, error2 => {\n          this.presentAlert('Ocurrio un error al actualizar datos.', false);\n          console.error(JSON.stringify(error2));\n        }\n      );\n    }\n  }\n\n  saveOccupation() {\n    if (!this.selCategoryId || this.selCategoryId == '') {\n      this.presentAlert('Debe seleccionar categoria.', false);\n      return;\n    } else if (!this.selOccupationsId || this.selOccupationsId == '') {\n      this.presentAlert('Debe seleccionar sub categoria.', false);\n      return;\n    }  else if (!this.selRate || this.selRate < 1) {\n      this.presentAlert('Debe ingresar tarifa valida.', false);\n      return;\n    }\n    let found = false;\n    if (this.workerOccupations && this.workerOccupations.length > 0){\n        for (const currentOc of this.workerOccupations ){\n          if (currentOc.occupationId == Number(this.selOccupationsId)) {\n            found = true;\n          }\n        }\n    }\n    if (found) {\n      this.presentAlert('Sub categoria ya asignada.', false);\n      return;\n    }\n    let bodyParam = {\n      \"hourlyRate\": this.selRate,\n      \"id\": {\n        \"occupationId\": this.selOccupationsId,\n        \"workerId\": this.workerObje.id\n      },\n      \"occupationId\": this.selOccupationsId,\n      \"rate\": 5,\n      \"status\": true,\n      \"workerId\": this.workerObje.id\n    };\n\n    this.api.postEventWithToken(\n      bodyParam,\n      `backend-services/workerOcuppations`,\n      this.token\n    ).subscribe( respSave => {\n      this.clean();\n      this.presentAlert('Se ha asociado la ocupacion.', false);\n      this.api.getWorkerOcuppationsByWorkerId( this.workerObje.id, this.token )\n                      .subscribe( (resp: WorkerOccupationDTO[]) => {\n                        this.workerOccupations = resp;\n      });\n    }, (err) => {\n      console.log('error en alta de ocupaciones', err);\n    });\n  }\n\n  deleteOccupation(wo: WorkerOccupationDTO) {\n    this.api.changeWorkerOccupationStatus(wo.workerId, wo.occupationId, false, wo.hourlyRate, this.token).subscribe( (respUpd: any) => {\n        this.presentAlert('Ocupacion eliminada.', false);\n        this.api.getWorkerOcuppationsByWorkerId( this.workerObje.id, this.token )\n            .subscribe( (resp: WorkerOccupationDTO[]) => {\n                this.workerOccupations = resp;\n        });\n    }, error2 => {\n      this.presentAlert('Ocurrio un error al eliminar ocupacion.', false);\n      console.error(JSON.stringify(error2));\n    });\n  }\n\n  categoryChange() {\n    this.loadOccupations(this.selCategoryId);\n  }\n\n  loadOccupations(categoryId: string) {\n    this.selOccupationsId = null;\n    this.categoryOccupations = [];\n    const reqField: RequestFields[] = [\n      { fieldName: 'categoryId', fieldValue: categoryId },\n    ];\n\n    this.api\n      .getItemsByMethodCache(\n        'categoryOccupationsByCategoryId',\n        reqField,\n        this.token\n      ).subscribe((data: CategoryOccupationDTO[]) => {\n        this.categoryOccupations = data;\n      });\n  }\n\n  clean() {\n    this.categoryOccupations = [];\n    this.selCategoryId = null;\n    this.selOccupationsId = null;\n    this.selRate = null;\n  }\n\n  returnHome(){\n    this.clean();\n    this.router.navigate(['/home']);\n  }\n\n  async presentAlert( messageStr: any , back: boolean) {\n    const alert = await this.alertController.create({\n      header: 'Actualizacion de Datos',\n      subHeader: 'Jobs Exchange',\n      message: messageStr,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    if (back) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n}\n"]}