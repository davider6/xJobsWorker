{"version":3,"sources":["./src/app/pages/registry/registry.page.html","./src/app/models/worker.ts","./src/app/pages/registry/registry-routing.module.ts","./src/app/pages/registry/registry.module.ts","./src/app/pages/registry/registry.page.scss","./src/app/pages/registry/registry.page.ts"],"names":[],"mappings":"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","file":"pages-registry-registry-module-es2015.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title></ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n    <div class=\\\"ion-text-center\\\">\\n        <img src=\\\"../../../assets/workerLogo.png\\\" class=\\\"onboarding-image\\\"/>\\n        <br><br>\\n        <span class=\\\"primary_title\\\">Complete su información</span>        \\n    </div>\\n    <br>\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"register(form)\\\">\\n        <div *ngIf=\\\"user\\\">\\n            <ion-avatar class=\\\"image-center\\\">\\n                <!-- <img src=\\\"\\\"> -->\\n                <img [src]=\\\"user.imagen\\\">\\n            </ion-avatar>\\n            <br>\\n        </div>\\n\\n        <ion-list class=\\\"ion-no-margin ion-no-padding\\\" class=\\\"animate__animated animate__fadeIn\\\">\\n            <ion-item>\\n                <ion-input [(ngModel)]=\\\"fullName\\\" name=\\\"fullName\\\" type=\\\"latin-name\\\" inputmode=\\\"latin-name\\\" placeholder=\\\"Nombre Completo\\\" maxlength=\\\"60\\\"></ion-input>\\n            </ion-item>            \\n            <ion-item>\\n                <ion-input [(ngModel)]=\\\"email\\\" name=\\\"email\\\" type=\\\"email\\\" inputmode=\\\"email\\\" placeholder=\\\"Correo Electrónico\\\" maxlength=\\\"150\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-input ngModel name=\\\"telephoneNumber\\\" type=\\\"text\\\" inputmode=\\\"tel\\\" placeholder=\\\"Número de Teléfono\\\" maxlength=\\\"50\\\"></ion-input>\\n                <ion-input ngModel name=\\\"zipCode\\\" type=\\\"text\\\" inputmode=\\\"tel\\\" placeholder=\\\"Zip Code\\\" maxlength=\\\"10\\\"></ion-input>\\n            </ion-item>\\n            <!-- <br>\\n            <ion-radio-group name=\\\"levelExperience\\\" [(ngModel)]=\\\"experience\\\">\\n                <ion-list-header>\\n                    <ion-label>Nivel de Experiencia:</ion-label>\\n                </ion-list-header>\\n                <ion-item>\\n                    <ion-label>Media (0 a 5 años)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"N\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Avanzada (5 a 10 años)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"B\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Experto (10 años en adelante)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"A\\\"></ion-radio>\\n                </ion-item>\\n            </ion-radio-group> -->\\n            <br>\\n            <ion-item *ngIf=\\\"!user\\\">\\n                <ion-input ngModel name=\\\"workerPassword\\\" type=\\\"password\\\" inputmode=\\\"latin-name\\\" placeholder=\\\"Contraseña\\\"></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"!user\\\">\\n                <ion-input ngModel name=\\\"workerPassword2\\\" type=\\\"password\\\" inputmode=\\\"latin-name\\\" placeholder=\\\"Confirmar Contraseña\\\"></ion-input>\\n            </ion-item>\\n        </ion-list>\\n\\n        <input [(ngModel)]=\\\"experience\\\" type=\\\"hidden\\\" name=\\\"levelExperience\\\" id=\\\"levelExperience\\\">\\n        <input [(ngModel)]=\\\"status\\\" type=\\\"hidden\\\" name=\\\"status\\\" id=\\\"status\\\">\\n        <input [(ngModel)]=\\\"imgProfile\\\" type=\\\"hidden\\\" name=\\\"profileImage\\\" id=\\\"profileImage\\\">\\n\\n        <div class=\\\"ion-padding\\\">\\n            <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"primary-btn\\\">Crear Registro</ion-button>\\n        </div>\\n    </form>\\n</ion-content>\";","export class Worker {\n    id: number;\n    fullName: string;\n    birthDate: Date;\n    gender: string;\n    nationalityId: number;\n    idType: number;\n    idNumber: string;\n    address: string;\n    email: string;\n    telephoneNumber: string;\n    itinNumber: string;\n    hasVehicle: boolean;\n    profileImage: string;\n    latitude: string;\n    longitude: string;\n    zipCode: string;\n    englishLevel: string;\n    likes: string;\n    reviews: number;\n    status: boolean;\n    workerPassword: string;\n    type: string; \n    externalId: string;\n    changePassword: boolean;\n    firstLogin: boolean;\n\n    constructor(\n        id: number,\n        fullName: string,\n        birthDate: Date,\n        gender: string,\n        nationalityId: number,\n        idType: number,\n        idNumber: string,\n        address: string,\n        email: string,\n        telephoneNumber: string,\n        itinNumber: string,\n        hasVehicle: boolean,\n        profileImage: string,\n        latitude: string,\n        longitude: string,\n        zipCode: string,\n        englishLevel: string,\n        likes: string,\n        reviews: number,\n        status: boolean,\n        workerPassword: string,\n        type: string,\n        externalId: string,\n        changePassword: boolean,\n        firstLogin: boolean)\n        {\n            this.id = id;\n            this.fullName = fullName;\n            this.birthDate = birthDate;\n            this.gender = gender;\n            this.nationalityId = nationalityId;\n            this.idType = idType;\n            this.idNumber = idNumber;\n            this.address = address;\n            this.email = email;\n            this.telephoneNumber = telephoneNumber;\n            this.itinNumber = itinNumber;\n            this.hasVehicle = hasVehicle;\n            this.profileImage = profileImage;\n            this.latitude = latitude;\n            this.longitude = longitude;\n            this.zipCode = zipCode;\n            this.englishLevel = englishLevel;\n            this.likes = likes;\n            this.reviews = reviews;\n            this.status = status;\n            this.workerPassword = workerPassword;\n            this.type = type;\n            this.externalId = externalId;\n            this.changePassword = changePassword;\n            this.firstLogin = firstLogin;\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistryPage } from './registry.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Geolocation } from \"@ionic-native/geolocation/ngx\";\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistryPageRoutingModule } from './registry-routing.module';\n\nimport { RegistryPage } from './registry.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegistryPageRoutingModule\n  ],\n  declarations: [RegistryPage],\n  providers: [Geolocation]\n})\nexport class RegistryPageModule {}\n","export default \".image-center {\\n  margin: 0 auto;\\n  min-width: 70px;\\n  min-height: 70px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYWx2YXJhZG8vZGVzYXJyb2xsby9lbmlhY2d0L2lvbmljL3hKb2JzL3hKb2JzV29ya2VyL3NyYy9hcHAvcGFnZXMvcmVnaXN0cnkvcmVnaXN0cnkucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9yZWdpc3RyeS9yZWdpc3RyeS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZWdpc3RyeS9yZWdpc3RyeS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1hZ2UtY2VudGVyIHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBtaW4td2lkdGg6IDcwcHg7XG4gICAgbWluLWhlaWdodDogNzBweDtcbn0iLCIuaW1hZ2UtY2VudGVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1pbi13aWR0aDogNzBweDtcbiAgbWluLWhlaWdodDogNzBweDtcbn0iXX0= */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { AuthService, Credenciales } from '../../services/auth.service';\nimport { auth } from 'firebase';\nimport { AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { Worker } from \"../../models/worker\";\nimport { Storage } from '@ionic/storage';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\n\n@Component({\n  selector: 'app-registry',\n  templateUrl: './registry.page.html',\n  styleUrls: ['./registry.page.scss'],\n})\nexport class RegistryPage implements OnInit {\n\n  GOOGLE: string = 'G';\n  FACEBOOK: string = 'F';\n  EMAIL: string = 'N';\n\n  user: Credenciales;\n\n  //Campos del formulario\n  public fullName: string;\n  public email: string;\n  public experience: string = 'N';\n  public status: boolean = true;\n  private workerType: string = \"N\";\n  public imgProfile: string = \"\";\n  private externalId: string = \"\";\n  private latitude: string;\n  private longitude: string;\n\n  automaticClose: boolean = false;\n\n  constructor( private authService: AuthService,\n               private alertController: AlertController,\n               private router: Router,\n               private api: ApiService,\n               private ionicStorage: Storage,\n               private geolocation: Geolocation ) { \n\n    if ( authService.usuario.email ) {\n      this.user = authService.usuario;\n      this.fullName = this.user.nombre;\n      this.email = this.user.email;\n      this.workerType = ( ( this.user.provider === 'google' ) ? this.GOOGLE : this.FACEBOOK );\n      this.imgProfile = this.user.imagen;\n      this.externalId = this.user.uid;\n    }\n\n    this.obtieneCoordenadas();\n    \n  }\n\n  async obtieneCoordenadas() {\n\n    this.latitude = await this.ionicStorage.get(\"lastLatitude\");\n    this.longitude = await this.ionicStorage.get(\"lastLongitude\");\n\n    if (this.latitude == null || this.longitude == null){\n      this.geolocation.getCurrentPosition().then((res: any) => {\n        this.latitude = res.coords.latitude.toString();\n        this.longitude = res.coords.longitude.toString();\n        this.ionicStorage.set('lastLatitude', this.latitude);\n        this.ionicStorage.set('lastLongitude', this.latitude);\n      })\n    }\n\n  }\n\n  ngOnInit() {  }\n\n  register( form:any ){\n\n    //console.log(form.value);\n\n    if ( !this.fullName || this.fullName == '' ){\n      this.presentAlert('No ha ingresado su nombre.', false);\n    }else if ( form.value.telephoneNumber == '' ){\n      this.presentAlert('No ha ingresado el número de teléfono.', false);\n    }else if ( !this.email || this.email == '' ){\n      this.presentAlert('No ha ingresado un email válido.', false);\n    }else if ( form.value.zipCode == '' ){\n      this.presentAlert('No ha ingresado un zip code válido.', false);\n    }else if ( this.experience === null || this.experience === '' ){\n      this.presentAlert('No ha seleccionado el nivel de inglés.', false);\n    }else if ( form.value.workerPassword === null || form.value.workerPassword === '' ){\n      this.presentAlert('No ha ingresado una contraseña.', false);\n    }else if ( form.value.workerPassword2 === null || form.value.workerPassword2 === '' ){\n      this.presentAlert('No ha confirmado la contraseña.', false);\n    }else if ( form.value.workerPassword !== form.value.workerPassword2 ){\n      this.presentAlert('La contraseña ingresada no coincide.', false);\n    }else{\n\n      if ( this.workerType === this.EMAIL ) this.status = false;\n\n      let worker: Worker = new Worker(\n        0,//id\n        this.fullName,//fullName\n        new Date(),//birthDate\n        'M',//gender\n        1,//nationalityId\n        1,//idType\n        '',//idNumber\n        '',//address\n        this.email,//email\n        form.value.telephoneNumber,//telephoneNumber\n        '',//itinNumber\n        false,//hasVehicle\n        this.imgProfile,//profileImage\n        this.latitude,//latitude\n        this.longitude,//longitude\n        form.value.zipCode,//zipCode\n        this.experience,//englishLevel\n        '',//likes\n        0,//reviews\n        this.status,//status\n        (( this.workerType === this.EMAIL ) ? form.value.workerPassword : '' ),//workerPassword\n        this.workerType,//type\n        this.externalId, //externalId\n        false, //changePassword\n        ( this.workerType === this.EMAIL ) //firstLogin\n      );\n      \n      \n      this.api.postEvent( worker, 'backend-services/workers' )\n        .subscribe ( (result) => {\n\n          console.log('registry', result);\n\n          if ( this.workerType === this.EMAIL ) {            \n            this.presentAlert( `Usuario registrado exitosamente. Un correo con instrucciones le será enviado a su cuenta ${ this.email }` , false );\n            this.api.cleanStorage();\n            this.ionicStorage.clear();\n            this.ionicStorage.set('welcomepage', true);\n            this.router.navigate(['/login']);\n          } else {\n            //this.presentAlert( 'Worker registrado exitosamente.', true );\n\n            let auth = {\n              'entity': 'W',\n              'type': this.workerType,\n              'username': this.externalId\n            };\n  \n            this.api.postEvent(\n              auth,\n              'auth'\n            )\n            .subscribe( login => {\n\n              // console.log('login', login);              \n              this.api.saveStorage( 'token', login['token'] );\n              this.api.saveStorage( 'userId', login['clientId'] );\n\n              this.api.getEvent(\n                `workers/${ login['clientId'] }`,\n                login['token']\n              ).subscribe( (usr) => {\n  \n                this.api.saveStorage( 'workerObject', JSON.stringify(usr) );\n\n                this.router.navigate(['/categories']);\n                \n              }, (err) => {\n                console.log('Error obteniendo información del usuario');\n              });\n            },\n            error => {\n              console.log('error en login', error);\n            });\n            \n          }\n\n        }, (err) => {\n          \n          console.log('Error registrando worker', err);\n\n          this.presentAlert( 'Error registrando worker.', false );\n\n        });\n\n\n    }\n\n  }\n\n  async presentAlert( message: any , back: boolean) {\n    const alert = await this.alertController.create({\n      header: 'Registro Nuevo',\n      subHeader: 'Jobs Exchange',\n      message: message,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    if (back)\n      this.router.navigate(['/home']);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}