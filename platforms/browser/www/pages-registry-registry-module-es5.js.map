{"version":3,"sources":["webpack:///src/app/pages/registry/registry.page.html","webpack:///src/app/models/worker.ts","webpack:///src/app/pages/registry/registry-routing.module.ts","webpack:///src/app/pages/registry/registry.module.ts","webpack:///src/app/pages/registry/registry.page.scss","webpack:///src/app/pages/registry/registry.page.ts"],"names":["Worker","id","fullName","birthDate","gender","nationalityId","idType","idNumber","address","email","telephoneNumber","itinNumber","hasVehicle","profileImage","latitude","longitude","zipCode","englishLevel","likes","reviews","status","workerPassword","type","externalId","changePassword","firstLogin","routes","path","component","RegistryPageRoutingModule","imports","forChild","exports","RegistryPageModule","declarations","providers","RegistryPage","authService","alertController","router","api","ionicStorage","geolocation","GOOGLE","FACEBOOK","EMAIL","experience","workerType","imgProfile","automaticClose","usuario","user","nombre","provider","imagen","uid","obtieneCoordenadas","get","getCurrentPosition","then","res","coords","toString","set","form","presentAlert","value","workerPassword2","worker","Date","postEvent","subscribe","result","console","log","cleanStorage","clear","navigate","auth","login","saveStorage","getEvent","usr","JSON","stringify","err","error","message","back","create","header","subHeader","buttons","alert","present","selector","template"],"mappings":"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","file":"pages-registry-registry-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title></ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n    <div class=\\\"ion-text-center\\\">\\n        <img src=\\\"../../../assets/workerLogo.png\\\" class=\\\"onboarding-image\\\"/>\\n        <br><br>\\n        <span class=\\\"primary_title\\\">Complete su informaci√≥n</span>        \\n    </div>\\n    <br>\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"register(form)\\\">\\n        <div *ngIf=\\\"user\\\">\\n            <ion-avatar class=\\\"image-center\\\">\\n                <!-- <img src=\\\"\\\"> -->\\n                <img [src]=\\\"user.imagen\\\">\\n            </ion-avatar>\\n            <br>\\n        </div>\\n\\n        <ion-list class=\\\"ion-no-margin ion-no-padding\\\" class=\\\"animate__animated animate__fadeIn\\\">\\n            <ion-item>\\n                <ion-input [(ngModel)]=\\\"fullName\\\" name=\\\"fullName\\\" type=\\\"latin-name\\\" inputmode=\\\"latin-name\\\" placeholder=\\\"Nombre Completo\\\" maxlength=\\\"60\\\"></ion-input>\\n            </ion-item>            \\n            <ion-item>\\n                <ion-input [(ngModel)]=\\\"email\\\" name=\\\"email\\\" type=\\\"email\\\" inputmode=\\\"email\\\" placeholder=\\\"Correo Electr√≥nico\\\" maxlength=\\\"150\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-input ngModel name=\\\"telephoneNumber\\\" type=\\\"text\\\" inputmode=\\\"tel\\\" placeholder=\\\"N√∫mero de Tel√©fono\\\" maxlength=\\\"50\\\"></ion-input>\\n                <ion-input ngModel name=\\\"zipCode\\\" type=\\\"text\\\" inputmode=\\\"tel\\\" placeholder=\\\"Zip Code\\\" maxlength=\\\"10\\\"></ion-input>\\n            </ion-item>\\n            <!-- <br>\\n            <ion-radio-group name=\\\"levelExperience\\\" [(ngModel)]=\\\"experience\\\">\\n                <ion-list-header>\\n                    <ion-label>Nivel de Experiencia:</ion-label>\\n                </ion-list-header>\\n                <ion-item>\\n                    <ion-label>Media (0 a 5 a√±os)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"N\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Avanzada (5 a 10 a√±os)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"B\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Experto (10 a√±os en adelante)</ion-label>\\n                    <ion-radio slot=\\\"start\\\" value=\\\"A\\\"></ion-radio>\\n                </ion-item>\\n            </ion-radio-group> -->\\n            <br>\\n            <ion-item *ngIf=\\\"!user\\\">\\n                <ion-input ngModel name=\\\"workerPassword\\\" type=\\\"password\\\" inputmode=\\\"latin-name\\\" placeholder=\\\"Contrase√±a\\\"></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"!user\\\">\\n                <ion-input ngModel name=\\\"workerPassword2\\\" type=\\\"password\\\" inputmode=\\\"latin-name\\\" placeholder=\\\"Confirmar Contrase√±a\\\"></ion-input>\\n            </ion-item>\\n        </ion-list>\\n\\n        <input [(ngModel)]=\\\"experience\\\" type=\\\"hidden\\\" name=\\\"levelExperience\\\" id=\\\"levelExperience\\\">\\n        <input [(ngModel)]=\\\"status\\\" type=\\\"hidden\\\" name=\\\"status\\\" id=\\\"status\\\">\\n        <input [(ngModel)]=\\\"imgProfile\\\" type=\\\"hidden\\\" name=\\\"profileImage\\\" id=\\\"profileImage\\\">\\n\\n        <div class=\\\"ion-padding\\\">\\n            <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"primary-btn\\\">Crear Registro</ion-button>\\n        </div>\\n    </form>\\n</ion-content>\";","export class Worker {\n    id: number;\n    fullName: string;\n    birthDate: Date;\n    gender: string;\n    nationalityId: number;\n    idType: number;\n    idNumber: string;\n    address: string;\n    email: string;\n    telephoneNumber: string;\n    itinNumber: string;\n    hasVehicle: boolean;\n    profileImage: string;\n    latitude: string;\n    longitude: string;\n    zipCode: string;\n    englishLevel: string;\n    likes: string;\n    reviews: number;\n    status: boolean;\n    workerPassword: string;\n    type: string; \n    externalId: string;\n    changePassword: boolean;\n    firstLogin: boolean;\n\n    constructor(\n        id: number,\n        fullName: string,\n        birthDate: Date,\n        gender: string,\n        nationalityId: number,\n        idType: number,\n        idNumber: string,\n        address: string,\n        email: string,\n        telephoneNumber: string,\n        itinNumber: string,\n        hasVehicle: boolean,\n        profileImage: string,\n        latitude: string,\n        longitude: string,\n        zipCode: string,\n        englishLevel: string,\n        likes: string,\n        reviews: number,\n        status: boolean,\n        workerPassword: string,\n        type: string,\n        externalId: string,\n        changePassword: boolean,\n        firstLogin: boolean)\n        {\n            this.id = id;\n            this.fullName = fullName;\n            this.birthDate = birthDate;\n            this.gender = gender;\n            this.nationalityId = nationalityId;\n            this.idType = idType;\n            this.idNumber = idNumber;\n            this.address = address;\n            this.email = email;\n            this.telephoneNumber = telephoneNumber;\n            this.itinNumber = itinNumber;\n            this.hasVehicle = hasVehicle;\n            this.profileImage = profileImage;\n            this.latitude = latitude;\n            this.longitude = longitude;\n            this.zipCode = zipCode;\n            this.englishLevel = englishLevel;\n            this.likes = likes;\n            this.reviews = reviews;\n            this.status = status;\n            this.workerPassword = workerPassword;\n            this.type = type;\n            this.externalId = externalId;\n            this.changePassword = changePassword;\n            this.firstLogin = firstLogin;\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistryPage } from './registry.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Geolocation } from \"@ionic-native/geolocation/ngx\";\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistryPageRoutingModule } from './registry-routing.module';\n\nimport { RegistryPage } from './registry.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegistryPageRoutingModule\n  ],\n  declarations: [RegistryPage],\n  providers: [Geolocation]\n})\nexport class RegistryPageModule {}\n","export default \".image-center {\\n  margin: 0 auto;\\n  min-width: 70px;\\n  min-height: 70px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYWx2YXJhZG8vZGVzYXJyb2xsby9lbmlhY2d0L2lvbmljL3hKb2JzL3hKb2JzV29ya2VyL3NyYy9hcHAvcGFnZXMvcmVnaXN0cnkvcmVnaXN0cnkucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9yZWdpc3RyeS9yZWdpc3RyeS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZWdpc3RyeS9yZWdpc3RyeS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1hZ2UtY2VudGVyIHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBtaW4td2lkdGg6IDcwcHg7XG4gICAgbWluLWhlaWdodDogNzBweDtcbn0iLCIuaW1hZ2UtY2VudGVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1pbi13aWR0aDogNzBweDtcbiAgbWluLWhlaWdodDogNzBweDtcbn0iXX0= */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { AuthService, Credenciales } from '../../services/auth.service';\nimport { auth } from 'firebase';\nimport { AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\nimport { Worker } from \"../../models/worker\";\nimport { Storage } from '@ionic/storage';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\n\n@Component({\n  selector: 'app-registry',\n  templateUrl: './registry.page.html',\n  styleUrls: ['./registry.page.scss'],\n})\nexport class RegistryPage implements OnInit {\n\n  GOOGLE: string = 'G';\n  FACEBOOK: string = 'F';\n  EMAIL: string = 'N';\n\n  user: Credenciales;\n\n  //Campos del formulario\n  public fullName: string;\n  public email: string;\n  public experience: string = 'N';\n  public status: boolean = true;\n  private workerType: string = \"N\";\n  public imgProfile: string = \"\";\n  private externalId: string = \"\";\n  private latitude: string;\n  private longitude: string;\n\n  automaticClose: boolean = false;\n\n  constructor( private authService: AuthService,\n               private alertController: AlertController,\n               private router: Router,\n               private api: ApiService,\n               private ionicStorage: Storage,\n               private geolocation: Geolocation ) { \n\n    if ( authService.usuario.email )¬†{\n      this.user = authService.usuario;\n      this.fullName = this.user.nombre;\n      this.email = this.user.email;\n      this.workerType = ( ( this.user.provider === 'google' ) ? this.GOOGLE : this.FACEBOOK );\n      this.imgProfile = this.user.imagen;\n      this.externalId = this.user.uid;\n    }\n\n    this.obtieneCoordenadas();\n    \n  }\n\n  async obtieneCoordenadas() {\n\n    this.latitude = await this.ionicStorage.get(\"lastLatitude\");\n    this.longitude = await this.ionicStorage.get(\"lastLongitude\");\n\n    if (this.latitude == null || this.longitude == null){\n      this.geolocation.getCurrentPosition().then((res: any) => {\n        this.latitude = res.coords.latitude.toString();\n        this.longitude = res.coords.longitude.toString();\n        this.ionicStorage.set('lastLatitude', this.latitude);\n        this.ionicStorage.set('lastLongitude', this.latitude);\n      })\n    }\n\n  }\n\n  ngOnInit() {  }\n\n  register( form:any ){\n\n    //console.log(form.value);\n\n    if ( !this.fullName || this.fullName == '' ){\n      this.presentAlert('No ha ingresado su nombre.', false);\n    }else if ( form.value.telephoneNumber == '' ){\n      this.presentAlert('No ha ingresado el n√∫mero de tel√©fono.', false);\n    }else if ( !this.email || this.email == '' ){\n      this.presentAlert('No ha ingresado un email v√°lido.', false);\n    }else if ( form.value.zipCode == '' ){\n      this.presentAlert('No ha ingresado un zip code v√°lido.', false);\n    }else if ( this.experience === null || this.experience === '' ){\n      this.presentAlert('No ha seleccionado el nivel de ingl√©s.', false);\n    }else if ( form.value.workerPassword === null || form.value.workerPassword === '' ){\n      this.presentAlert('No ha ingresado una contrase√±a.', false);\n    }else if ( form.value.workerPassword2 === null || form.value.workerPassword2 === '' ){\n      this.presentAlert('No ha confirmado la contrase√±a.', false);\n    }else if ( form.value.workerPassword !== form.value.workerPassword2 ){\n      this.presentAlert('La contrase√±a ingresada no coincide.', false);\n    }else{\n\n      if ( this.workerType === this.EMAIL ) this.status = false;\n\n      let worker: Worker = new Worker(\n        0,//id\n        this.fullName,//fullName\n        new Date(),//birthDate\n        'M',//gender\n        1,//nationalityId\n        1,//idType\n        '',//idNumber\n        '',//address\n        this.email,//email\n        form.value.telephoneNumber,//telephoneNumber\n        '',//itinNumber\n        false,//hasVehicle\n        this.imgProfile,//profileImage\n        this.latitude,//latitude\n        this.longitude,//longitude\n        form.value.zipCode,//zipCode\n        this.experience,//englishLevel\n        '',//likes\n        0,//reviews\n        this.status,//status\n        (( this.workerType === this.EMAIL ) ? form.value.workerPassword : '' ),//workerPassword\n        this.workerType,//type\n        this.externalId, //externalId\n        false, //changePassword\n        ( this.workerType === this.EMAIL ) //firstLogin\n      );\n      \n      \n      this.api.postEvent( worker, 'backend-services/workers' )\n        .subscribe ( (result) => {\n\n          console.log('registry', result);\n\n          if ( this.workerType === this.EMAIL ) {            \n            this.presentAlert( `Usuario registrado exitosamente. Un correo con instrucciones le ser√° enviado a su cuenta ${ this.email }` , false );\n            this.api.cleanStorage();\n            this.ionicStorage.clear();\n            this.ionicStorage.set('welcomepage', true);\n            this.router.navigate(['/login']);\n          } else {\n            //this.presentAlert( 'Worker registrado exitosamente.', true );\n\n            let auth = {\n              'entity': 'W',\n              'type': this.workerType,\n              'username': this.externalId\n            };\n  \n            this.api.postEvent(\n              auth,\n              'auth'\n            )\n            .subscribe( login => {\n\n              // console.log('login', login);              \n              this.api.saveStorage( 'token', login['token'] );\n              this.api.saveStorage( 'userId', login['clientId'] );\n\n              this.api.getEvent(\n                `workers/${ login['clientId'] }`,\n                login['token']\n              ).subscribe( (usr) => {\n  \n                this.api.saveStorage( 'workerObject', JSON.stringify(usr) );\n\n                this.router.navigate(['/categories']);\n                \n              }, (err) => {\n                console.log('Error obteniendo informaci√≥n del usuario');\n              });\n            },\n            error => {\n              console.log('error en login', error);\n            });\n            \n          }\n\n        }, (err) => {\n          \n          console.log('Error registrando worker', err);\n\n          this.presentAlert( 'Error registrando worker.', false );\n\n        });\n\n\n    }\n\n  }\n\n  async presentAlert( message: any , back: boolean) {\n    const alert = await this.alertController.create({\n      header: 'Registro Nuevo',\n      subHeader: 'Jobs Exchange',\n      message: message,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    if (back)\n      this.router.navigate(['/home']);\n  }\n\n}\n"]}